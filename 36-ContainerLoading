#include <stdio.h>
int max(int a, int b) {
    return (a > b) ? a : b;
}
void containerLoading(int weights[], int values[], int n, int capacity) {
    int i, w;
    int dp[n + 1][capacity + 1];
    for (i = 0; i <= n; i++) {
        for (w = 0; w <= capacity; w++) {
            if (i == 0 || w == 0)
                dp[i][w] = 0;
            else if (weights[i - 1] <= w)
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
            else
                dp[i][w] = dp[i - 1][w];
        }
    }
	printf("P. Vijaya Lakshmi, Reg.No - 192210200\n");
    printf("Maximum value that can be obtained: %d\n", dp[n][capacity]);
    int res = dp[n][capacity];
    w = capacity;
    printf("Items included (weight, value):\n");
    for (i = n; i > 0 && res > 0; i--) {
        if (res == dp[i - 1][w])
            continue;
        else {
            printf("(%d, %d)\n", weights[i - 1], values[i - 1]);
            res -= values[i - 1];
            w -= weights[i - 1];
        }
    }
}
int main() {
    int weights[] = {10, 20, 30};
    int values[] = {60, 100, 120};
    int capacity = 50;
    int n = sizeof(values) / sizeof(values[0]);
    containerLoading(weights, values, n, capacity);
    return 0;
}
